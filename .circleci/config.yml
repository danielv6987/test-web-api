version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0

jobs:
  build:
    working_directory: /src
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run: dotnet restore
      - run: dotnet build -c Release -o /app/build
      - run: dotnet publish -c Release -o /app/publish
      - persist_to_workspace: 
          root: /
          paths:
            - app
            - src
  
  scan:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run: apt-get update -y
      - run: apt-get install -y openjdk-11-jre-headless
      - run: dotnet restore
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: pwd
      - run: ps -p $$
      - run: bash --version
      - run: echo $0
      - run: export PATH=$PATH:/root/.dotnet/tools && echo $PATH
      - run: echo $PATH
      - run: export PATH=$PATH:/root/.dotnet/tools && dotnet sonarscanner begin /o:'$SONAR_ORG_KEY' /k:'$SONAR_PROJECT_KEY' /d:sonar.host.url='$SONAR_HOST_URL' /d:sonar.login='$SONAR_TOKEN' /d:sonar.branch.name='$CIRCLE_BRANCH'
      - run: dotnet build
      - run: export PATH=$PATH:/root/.dotnet/tools && dotnet sonarscanner end /d:sonar.login='$SONAR_TOKEN'
  
  upload:
    docker:
      - image: cimg/python:3.6
    steps:
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y p7zip-full
      - attach_workspace: 
          at: /tmp/workspace
      - run: 7z a kagr-portal-api.zip /tmp/workspace/app/publish/*
      - aws-s3/copy:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: kagr-portal-api.zip
          to: 's3://vecd-snaplogic/test/'

workflows: 
  build-deploy:
    jobs:
      - build
      - scan
      - upload:
          requires:
            - build