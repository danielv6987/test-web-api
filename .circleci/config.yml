version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0

jobs:
  build:
    working_directory: /src
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run: dotnet restore
      - run: dotnet nuget locals all -l
      - run: dotnet build -c Release
      - run: dotnet publish -c Release -o /app/publish
      - persist_to_workspace: 
          root: /
          paths:
            - app/publish
  
  scan:
    working_directory: /src
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run: apt-get update -y
      - run: apt-get install -y openjdk-11-jre-headless
      - run: apt-get install libxml2-utils
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: echo 'export PATH=$PATH:/root/.dotnet/tools' >> $BASH_ENV
      - run: dotnet restore
      - run: echo 'export KAGR_VERSION=$(xmllint --xpath "string(//Version)" TestWebApi.csproj)' >> $BASH_ENV
      - run: dotnet sonarscanner begin /o:"$SONAR_ORG_KEY" /k:"$SONAR_PROJECT_KEY" /v:"$KAGR_VERSION" /d:sonar.host.url="$SONAR_HOST_URL" /d:sonar.login="$SONAR_TOKEN" /d:sonar.branch.name="$CIRCLE_BRANCH" 
      - run: dotnet build
      - run: dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
  
  upload:
    docker:
      - image: cimg/python:3.6
    steps:
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y p7zip-full
      - attach_workspace: 
          at: /tmp/workspace
      - run: 7z a kagr-portal-api.zip /tmp/workspace/app/publish/*
      - aws-s3/copy:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: kagr-portal-api.zip
          to: 's3://vecd-snaplogic/test/'

workflows: 
  build-deploy:
    jobs:
      - build
      - scan:
          requires:
            - build
      - upload:
          requires:
            - scan
          filters: 
            branches:
              only: 
                - master